"""
Smart Call Center - –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Backend
–í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ –¥–ª—è –ª–µ–≥–∫–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
"""

import os
from typing import Optional
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

class Config:
    """–¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    
    # ===== –û–°–ù–û–í–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò =====
    
    # –†–µ–∂–∏–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    DEBUG: bool = os.getenv("DEBUG", "False").lower() == "true"
    ENVIRONMENT: str = os.getenv("ENVIRONMENT", "development")
    
    # –°–µ—Ä–≤–µ—Ä –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    HOST: str = os.getenv("HOST", "0.0.0.0")
    PORT: int = int(os.getenv("PORT", "8001"))
    
    # ===== –ë–ê–ó–ê –î–ê–ù–ù–´–• =====
    
    # MongoDB –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    MONGO_URL: str = os.getenv("MONGO_URL", "mongodb://localhost:27017")
    DB_NAME: str = os.getenv("DB_NAME", "callcenter")
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    MONGO_MAX_CONNECTIONS: int = int(os.getenv("MONGO_MAX_CONNECTIONS", "100"))
    MONGO_MIN_CONNECTIONS: int = int(os.getenv("MONGO_MIN_CONNECTIONS", "10"))
    
    # ===== –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨ =====
    
    # JWT –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    JWT_SECRET_KEY: str = os.getenv("JWT_SECRET_KEY", "your-super-secret-jwt-key-change-in-production")
    JWT_ALGORITHM: str = os.getenv("JWT_ALGORITHM", "HS256")
    ACCESS_TOKEN_EXPIRE_MINUTES: int = int(os.getenv("ACCESS_TOKEN_EXPIRE_MINUTES", "1440"))
    
    # CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    CORS_ORIGINS: list = os.getenv("CORS_ORIGINS", "http://localhost:3000,http://127.0.0.1:3000").split(",")
    CORS_ALLOW_CREDENTIALS: bool = os.getenv("CORS_ALLOW_CREDENTIALS", "True").lower() == "true"
    
    # ===== ASTERISK =====
    
    # Asterisk –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å —á–µ—Ä–µ–∑ UI)
    DEFAULT_ASTERISK_HOST: str = os.getenv("DEFAULT_ASTERISK_HOST", "demo.asterisk.com")
    DEFAULT_ASTERISK_PORT: int = int(os.getenv("DEFAULT_ASTERISK_PORT", "8088"))
    DEFAULT_ASTERISK_USERNAME: str = os.getenv("DEFAULT_ASTERISK_USERNAME", "asterisk")
    DEFAULT_ASTERISK_PASSWORD: str = os.getenv("DEFAULT_ASTERISK_PASSWORD", "asterisk")
    DEFAULT_ASTERISK_PROTOCOL: str = os.getenv("DEFAULT_ASTERISK_PROTOCOL", "ARI")
    
    # –¢–∞–π–º–∞—É—Ç—ã
    ASTERISK_CONNECTION_TIMEOUT: int = int(os.getenv("ASTERISK_CONNECTION_TIMEOUT", "30"))
    ASTERISK_RETRY_ATTEMPTS: int = int(os.getenv("ASTERISK_RETRY_ATTEMPTS", "3"))
    
    # ===== –õ–û–ì–ò–†–û–í–ê–ù–ò–ï =====
    
    # –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    LOG_LEVEL: str = os.getenv("LOG_LEVEL", "INFO")
    LOG_FORMAT: str = os.getenv("LOG_FORMAT", "%(asctime)s - %(name)s - %(levelname)s - %(message)s")
    LOG_FILE: Optional[str] = os.getenv("LOG_FILE")  # –ï—Å–ª–∏ None, –ª–æ–≥–∏ —Ç–æ–ª—å–∫–æ –≤ –∫–æ–Ω—Å–æ–ª—å
    
    # ===== –ü–†–ò–õ–û–ñ–ï–ù–ò–ï =====
    
    # –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    DEFAULT_CALL_RECORDING: bool = os.getenv("DEFAULT_CALL_RECORDING", "True").lower() == "true"
    DEFAULT_AUTO_ANSWER_DELAY: int = int(os.getenv("DEFAULT_AUTO_ANSWER_DELAY", "3"))
    DEFAULT_MAX_CALL_DURATION: int = int(os.getenv("DEFAULT_MAX_CALL_DURATION", "3600"))
    DEFAULT_QUEUE_TIMEOUT: int = int(os.getenv("DEFAULT_QUEUE_TIMEOUT", "300"))
    
    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    EMAIL_NOTIFICATIONS: bool = os.getenv("EMAIL_NOTIFICATIONS", "True").lower() == "true"
    SMS_NOTIFICATIONS: bool = os.getenv("SMS_NOTIFICATIONS", "False").lower() == "true"
    
    # ===== –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–¨ =====
    
    # –ü—É–ª—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π
    MAX_WORKERS: int = int(os.getenv("MAX_WORKERS", "4"))
    WEBSOCKET_MAX_CONNECTIONS: int = int(os.getenv("WEBSOCKET_MAX_CONNECTIONS", "100"))
    
    # –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ
    CACHE_TTL: int = int(os.getenv("CACHE_TTL", "300"))  # 5 –º–∏–Ω—É—Ç
    
    # ===== DOCKER/–ö–û–ù–¢–ï–ô–ù–ï–†–ò–ó–ê–¶–ò–Ø =====
    
    # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Docker
    DOCKER_MODE: bool = os.getenv("DOCKER_MODE", "False").lower() == "true"
    CONTAINER_NAME: str = os.getenv("CONTAINER_NAME", "callcenter-backend")
    
    # Health check
    HEALTH_CHECK_INTERVAL: int = int(os.getenv("HEALTH_CHECK_INTERVAL", "30"))
    
    @classmethod
    def get_mongo_uri(cls) -> str:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ URI –¥–ª—è MongoDB"""
        return f"{cls.MONGO_URL}/{cls.DB_NAME}"
    
    @classmethod
    def get_asterisk_config(cls) -> dict:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Asterisk –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
        return {
            "host": cls.DEFAULT_ASTERISK_HOST,
            "port": cls.DEFAULT_ASTERISK_PORT,
            "username": cls.DEFAULT_ASTERISK_USERNAME,
            "password": cls.DEFAULT_ASTERISK_PASSWORD,
            "protocol": cls.DEFAULT_ASTERISK_PROTOCOL,
            "timeout": cls.ASTERISK_CONNECTION_TIMEOUT,
            "enabled": True
        }
    
    @classmethod
    def is_production(cls) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Ä–µ–∂–∏–º–∞"""
        return cls.ENVIRONMENT.lower() == "production"
    
    @classmethod
    def is_development(cls) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∂–∏–º–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"""
        return cls.ENVIRONMENT.lower() == "development"
    
    @classmethod
    def print_config(cls) -> None:
        """–í—ã–≤–æ–¥ —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (–±–µ–∑ —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö)"""
        print("=" * 50)
        print("üîß Smart Call Center - Backend Configuration")
        print("=" * 50)
        print(f"Environment: {cls.ENVIRONMENT}")
        print(f"Debug Mode: {cls.DEBUG}")
        print(f"Host: {cls.HOST}:{cls.PORT}")
        print(f"Database: {cls.DB_NAME}")
        print(f"MongoDB URL: {cls.MONGO_URL}")
        print(f"JWT Algorithm: {cls.JWT_ALGORITHM}")
        print(f"Token Expire: {cls.ACCESS_TOKEN_EXPIRE_MINUTES} min")
        print(f"CORS Origins: {cls.CORS_ORIGINS}")
        print(f"Asterisk Host: {cls.DEFAULT_ASTERISK_HOST}:{cls.DEFAULT_ASTERISK_PORT}")
        print(f"Log Level: {cls.LOG_LEVEL}")
        print(f"Docker Mode: {cls.DOCKER_MODE}")
        print("=" * 50)

# –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
config = Config()

# –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
MONGO_URL = config.MONGO_URL
DB_NAME = config.DB_NAME
JWT_SECRET_KEY = config.JWT_SECRET_KEY
ACCESS_TOKEN_EXPIRE_MINUTES = config.ACCESS_TOKEN_EXPIRE_MINUTES